<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eon.mapper.EmployeeMapper">
    <resultMap id="getDeptName" type="Employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="realName" property="realName"/>
        <result column="password" property="password"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
        <result column="inputTime" property="inputTime"/>
        <result column="state" property="state"/>
        <result column="admin" property="admin"/>
        <association property="dept" columnPrefix="dept_" javaType="Department">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <collection property="roles" ofType="Role" column="id" select="eon.mapper.RoleMapper.getRoleByEmployee"
                    fetchType="eager"/>
    </resultMap>

    <select id="loginCheck" resultMap="getDeptName">
        SELECT * FROM employee WHERE username = #{username} AND password = #{password} AND state = true
    </select>

    <sql id="field">
        username,realName,password,tel,email,inputTime,state,admin,dept_id
    </sql>

    <insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO employee (<include refid="field"/>) VALUES
        (#{username},#{realName},#{password},#{tel},#{email},#{inputTime},#{state},#{admin},#{dept.id})
    </insert>

    <insert id="handleRelationToSave">
        INSERT INTO employee_role (employee_id,role_id) VALUES (#{eid},#{rid})
    </insert>

    <update id="update">
        UPDATE employee
        SET username = #{username},realName = #{realName},tel = #{tel},email = #{email},dept_id = #{dept.id}
        WHERE id = #{id} AND state = true
    </update>

    <insert id="handleRelationToDelete">
        DELETE FROM employee_role WHERE employee_id = #{eid}
    </insert>

    <update id="dimission">
        UPDATE employee SET state = false WHERE id = #{id}
    </update>

    <sql id="condition">
        <where>
            <if test="keyword != null">
                (e.username LIKE CONCAT("%",#{keyword},"%") OR e.realName LIKE CONCAT("%",#{keyword},"%"))
            </if>
            <if test="beginTime != null">
                AND e.inputTime &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                AND e.inputTime &lt;= #{endTime}
            </if>
            <if test="state != null">
                AND e.state = #{state}
            </if>
        </where>
    </sql>

    <select id="selectCountByCondition" resultType="long">
        SELECT COUNT(*) FROM employee e
        <include refid="condition"/>
    </select>



    <select id="selectPageByCondition" resultMap="getDeptName">
        SELECT e.*,d.name dept_name
        FROM employee e LEFT JOIN department d ON d.id = e.dept_id
        <include refid="condition"/>
        <if test="rows > 0">
            LIMIT #{startIndex},#{rows}
        </if>
    </select>


    <select id="listForDept" resultType="Employee">
        SELECT id,realName,username FROM employee WHERE state = true
    </select>

    <update id="saveLoginIdForEmp">
        UPDATE employee SET loginId = #{loginId} WHERE id = #{id}
    </update>

    <select id="queryLoginId" resultType="String">
        SELECT loginId FROM employee WHERE id = #{id}
    </select>

    <resultMap id="getEmployee" type="Employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="realName" property="realName"/>
        <result column="password" property="password"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
    </resultMap>

    <select id="get" resultMap="getEmployee">
        SELECT * FROM Employee WHERE id = #{id}
    </select>
</mapper>